{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Plasticon\\\\Downloads\\\\quiz-app\\\\src\\\\AdminFolders\\\\Instructions\\\\PP.js\";\n// import React, { Component } from \"react\";\n// import { GrUpdate } from \"react-icons/gr\";\n// import { AiFillDelete } from \"react-icons/ai\";\n// import axios from \"axios\";\n// class PP extends Component {\n//   refresh = () => {\n//     window.location.reload(false);\n//   };\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       jqId: \"\",\n//       jqName: \"\",\n//       values: [],\n//     };\n//   }\n//   handleChange = (event) => {\n//     this.setState({ [event.target.name]: event.target.value });\n//   };\n//   handleSubmit = (event) => {\n//     event.preventDefault();\n//     axios\n//       .post(\n//         \"http://localhost:8081/java/saveJavaQuestions\",\n//         this.state\n//       )\n//       .then((response) => {\n//         console.log(response);\n//         console.log(response.values);\n//       });\n//   };\n//   componentDidMount() {\n//     const headers = { \"Content-Type\": \"application/json\" };\n//     fetch(\"http://localhost:8081/java/getJavaQuestions\", {\n//       headers,\n//     })\n//       .then((response) => response.json())\n//       .then((json) => {\n//         this.setState({ values: json });\n//       });\n//   }\n//   deleteRow(jqId) {\n//     if (window.confirm(\"Are You Sure You Want To Delete?\")) {\n//       axios.delete(\n//         `http://localhost:8081/java/deleteJavaQuestions/${jqId}`\n//       );\n//     }\n//   }\n//   getRecord = (jqName) => {\n//     const obj = this.state.values.find(\n//       (item) => item.jqName === jqName\n//     );\n//     return obj;\n//   };\n//   Edit = (jqName) => {\n//     const tempProduct = this.state.values;\n//     const index = tempProduct.indexOf(this.getRecord(jqName));\n//     const selectedRecord = tempProduct[index];\n//     this.setState({\n//       jqId: selectedRecord[\"jqId\"],\n//       jqName: selectedRecord[\"jqName\"],\n//     });\n//   };\n//   render() {\n//     const { jqId, jqName } = this.state;\n//     return (\n//       <div>\n//         <form onSubmit={this.handleSubmit} >\n//           <section className=\"tab\">\n//           <div className=\"cotaines\">\n//             <div className=\"box\">\n//               <div className=\"Heading\">\n//             <h1>Instructions</h1>\n//             </div>\n//             <p>\n//                 <span className=\"sub-heading\">\n//                   Read the following instructions carefully:\n//                 </span>\n//               </p>\n//               <input\n//                 type=\"text\"\n//                 id=\"jqId\"\n//                 name=\"jqName\"\n//                 data-parse=\"uppercase\"\n//                 value={this.state.jqName}\n//                 onChange={this.handleChange}\n//                 required\n//               />\n//           </div>\n//           </div>\n//           <div className=\"footer\">\n//             <a href=\"#\" onClick={this.componentDidMount()}  type=\"submit\">\n//               Save\n//             </a>\n//           </div>\n//           </section>\n//         </form>\n//         <div style={{ paddingTop: \"10px\" }}>\n//           <ul id=\"myTable\">\n//             {this.state.values.map((obj) => {\n//               return (\n//                 <ul key={obj.jqId}>\n//                   <li>\n//                     <button\n//                       onClick={() => this.Edit(obj.jqName)}\n//                     >\n//                       <GrUpdate />{\" \"}\n//                     </button>\n//                     <button\n//                       style={{ marginLeft: \"10px\" }}\n//                       onClick={() => this.deleteRow(obj.jqId)}\n//                     >\n//                       <AiFillDelete />{\" \"}\n//                     </button>\n//                   </li>\n//                   <li>{obj.jqName}</li>\n//                 </ul>\n//               );\n//             })}\n//           </ul>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n// export default PP;\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\nimport { GrUpdate } from \"react-icons/gr\";\nimport { AiFillDelete } from \"react-icons/ai\";\nimport axios from \"axios\";\nimport { BsStarFill } from \"react-icons/bs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PP extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      axios.post(\"http://localhost:8081/java/saveJavaQuestions\", this.state).then(response => {\n        console.log(response);\n        console.log(response.values);\n      });\n    };\n\n    this.getRecord = jqName => {\n      const obj = this.state.values.find(item => item.jqName === jqName);\n      return obj;\n    };\n\n    this.Edit = jqName => {\n      const tempProduct = this.state.values;\n      const index = tempProduct.indexOf(this.getRecord(jqName));\n      const selectedRecord = tempProduct[index];\n      this.setState({\n        jqId: selectedRecord[\"jqId\"],\n        jqName: selectedRecord[\"jqName\"]\n      });\n    };\n\n    this.state = {\n      jqId: \"\",\n      jqName: \"\",\n      values: []\n    };\n  }\n\n  componentDidMount() {\n    const headers = {\n      \"Content-Type\": \"application/json\"\n    };\n    fetch(\"http://localhost:8081/java/getJavaQuestions\", {\n      headers\n    }).then(response => response.json()).then(json => {\n      this.setState({\n        values: json\n      });\n    });\n  }\n\n  deleteRow(jqId) {\n    if (window.confirm(\"Are You Sure You Want To Delete?\")) {\n      axios.delete(`http://localhost:8081/java/deleteJavaQuestions/${jqId}`);\n    }\n  }\n\n  render() {\n    const {\n      jqId,\n      jqName\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cont\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"page-content innerContant\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-center bold\",\n              children: \"Instructions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sub-heading\",\n              style: {\n                paddingLeft: \"20px\"\n              },\n              children: \"Write the instructions Here:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"jqId\",\n              name: \"jqName\",\n              \"data-parse\": \"uppercase\",\n              value: this.state.jqName,\n              onChange: this.handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stbtns\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              style: {\n                width: \"20%\"\n              },\n              onClick: this.componentDidMount(),\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"top\",\n          children: this.state.values.map(obj => {\n            return /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"oderlist\",\n              children: /*#__PURE__*/_jsxDEV(\"li\", {\n                onClick: () => this.Edit(obj.jqName),\n                children: [/*#__PURE__*/_jsxDEV(BsStarFill, {\n                  className: \"col\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 21\n                }, this), \" \", /*#__PURE__*/_jsxDEV(AiFillDelete, {\n                  style: {\n                    marginLeft: \"8px\"\n                  },\n                  onClick: () => this.deleteRow(obj.jqId)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 52\n                }, this), /*#__PURE__*/_jsxDEV(GrUpdate, {\n                  style: {\n                    marginLeft: \"12px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 21\n                }, this), \" \", obj.jqName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 19\n              }, this)\n            }, obj.rqId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default PP;","map":{"version":3,"sources":["C:/Users/Plasticon/Downloads/quiz-app/src/AdminFolders/Instructions/PP.js"],"names":["React","Component","BrowserRouter","Router","Link","GrUpdate","AiFillDelete","axios","BsStarFill","PP","constructor","props","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","post","state","then","response","console","log","values","getRecord","jqName","obj","find","item","Edit","tempProduct","index","indexOf","selectedRecord","jqId","componentDidMount","headers","fetch","json","deleteRow","window","confirm","delete","render","paddingLeft","width","map","marginLeft","rqId"],"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","sourcesContent":["// import React, { Component } from \"react\";\r\n\r\n// import { GrUpdate } from \"react-icons/gr\";\r\n// import { AiFillDelete } from \"react-icons/ai\";\r\n// import axios from \"axios\";\r\n\r\n// class PP extends Component {\r\n//   refresh = () => {\r\n//     window.location.reload(false);\r\n//   };\r\n//   constructor(props) {\r\n//     super(props);\r\n\r\n//     this.state = {\r\n//       jqId: \"\",\r\n//       jqName: \"\",\r\n//       values: [],\r\n//     };\r\n//   }\r\n\r\n//   handleChange = (event) => {\r\n//     this.setState({ [event.target.name]: event.target.value });\r\n//   };\r\n\r\n//   handleSubmit = (event) => {\r\n//     event.preventDefault();\r\n\r\n//     axios\r\n//       .post(\r\n//         \"http://localhost:8081/java/saveJavaQuestions\",\r\n//         this.state\r\n//       )\r\n//       .then((response) => {\r\n//         console.log(response);\r\n//         console.log(response.values);\r\n//       });\r\n//   };\r\n\r\n//   componentDidMount() {\r\n//     const headers = { \"Content-Type\": \"application/json\" };\r\n//     fetch(\"http://localhost:8081/java/getJavaQuestions\", {\r\n//       headers,\r\n//     })\r\n//       .then((response) => response.json())\r\n//       .then((json) => {\r\n//         this.setState({ values: json });\r\n//       });\r\n//   }\r\n\r\n//   deleteRow(jqId) {\r\n//     if (window.confirm(\"Are You Sure You Want To Delete?\")) {\r\n//       axios.delete(\r\n//         `http://localhost:8081/java/deleteJavaQuestions/${jqId}`\r\n//       );\r\n//     }\r\n//   }\r\n\r\n//   getRecord = (jqName) => {\r\n//     const obj = this.state.values.find(\r\n//       (item) => item.jqName === jqName\r\n//     );\r\n//     return obj;\r\n//   };\r\n//   Edit = (jqName) => {\r\n//     const tempProduct = this.state.values;\r\n//     const index = tempProduct.indexOf(this.getRecord(jqName));\r\n//     const selectedRecord = tempProduct[index];\r\n//     this.setState({\r\n//       jqId: selectedRecord[\"jqId\"],\r\n//       jqName: selectedRecord[\"jqName\"],\r\n\r\n//     });\r\n//   };\r\n\r\n//   render() {\r\n//     const { jqId, jqName } = this.state;\r\n//     return (\r\n//       <div>\r\n//         <form onSubmit={this.handleSubmit} >\r\n//           <section className=\"tab\">\r\n//           <div className=\"cotaines\">\r\n//             <div className=\"box\">\r\n//               <div className=\"Heading\">\r\n//             <h1>Instructions</h1>\r\n//             </div>\r\n//             <p>\r\n//                 <span className=\"sub-heading\">\r\n//                   Read the following instructions carefully:\r\n//                 </span>\r\n//               </p>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 id=\"jqId\"\r\n//                 name=\"jqName\"\r\n//                 data-parse=\"uppercase\"\r\n//                 value={this.state.jqName}\r\n//                 onChange={this.handleChange}\r\n//                 required\r\n//               />\r\n//           </div>\r\n//           </div>\r\n//           <div className=\"footer\">\r\n//             <a href=\"#\" onClick={this.componentDidMount()}  type=\"submit\">\r\n//               Save\r\n//             </a>\r\n//           </div>\r\n//           </section>\r\n//         </form>\r\n\r\n//         <div style={{ paddingTop: \"10px\" }}>\r\n//           <ul id=\"myTable\">\r\n//             {this.state.values.map((obj) => {\r\n//               return (\r\n//                 <ul key={obj.jqId}>\r\n//                   <li>\r\n//                     <button\r\n//                       onClick={() => this.Edit(obj.jqName)}\r\n\r\n//                     >\r\n//                       <GrUpdate />{\" \"}\r\n//                     </button>\r\n//                     <button\r\n//                       style={{ marginLeft: \"10px\" }}\r\n//                       onClick={() => this.deleteRow(obj.jqId)}\r\n\r\n//                     >\r\n//                       <AiFillDelete />{\" \"}\r\n//                     </button>\r\n//                   </li>\r\n\r\n//                   <li>{obj.jqName}</li>\r\n\r\n//                 </ul>\r\n//               );\r\n//             })}\r\n//           </ul>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default PP;\r\n\r\nimport React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\r\nimport { GrUpdate } from \"react-icons/gr\";\r\nimport { AiFillDelete } from \"react-icons/ai\";\r\nimport axios from \"axios\";\r\nimport { BsStarFill } from \"react-icons/bs\";\r\n\r\nclass PP extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      jqId: \"\",\r\n      jqName: \"\",\r\n      values: [],\r\n    };\r\n  }\r\n  handleChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    axios\r\n      .post(\"http://localhost:8081/java/saveJavaQuestions\", this.state)\r\n      .then((response) => {\r\n        console.log(response);\r\n        console.log(response.values);\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const headers = { \"Content-Type\": \"application/json\" };\r\n    fetch(\"http://localhost:8081/java/getJavaQuestions\", {\r\n      headers,\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        this.setState({ values: json });\r\n      });\r\n  }\r\n\r\n  deleteRow(jqId) {\r\n    if (window.confirm(\"Are You Sure You Want To Delete?\")) {\r\n      axios.delete(`http://localhost:8081/java/deleteJavaQuestions/${jqId}`);\r\n    }\r\n  }\r\n\r\n  getRecord = (jqName) => {\r\n    const obj = this.state.values.find((item) => item.jqName === jqName);\r\n    return obj;\r\n  };\r\n  Edit = (jqName) => {\r\n    const tempProduct = this.state.values;\r\n    const index = tempProduct.indexOf(this.getRecord(jqName));\r\n    const selectedRecord = tempProduct[index];\r\n    this.setState({\r\n      jqId: selectedRecord[\"jqId\"],\r\n      jqName: selectedRecord[\"jqName\"],\r\n    });\r\n  };\r\n  render() {\r\n    const { jqId, jqName } = this.state;\r\n    return (\r\n      <div className=\"cont\">\r\n        <section className=\"page-content innerContant\">\r\n          <form onSubmit={this.handleSubmit}>\r\n            <div>\r\n              <h1 className=\"text-center bold\">Instructions</h1>\r\n            </div>\r\n            <p>\r\n              <span className=\"sub-heading\" style={{ paddingLeft: \"20px\" }}>\r\n                Write the instructions Here:\r\n              </span>\r\n            </p>\r\n\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                id=\"jqId\"\r\n                name=\"jqName\"\r\n                data-parse=\"uppercase\"\r\n                value={this.state.jqName}\r\n                onChange={this.handleChange}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"stbtns\">\r\n              <button\r\n                type=\"submit\"\r\n                style={{ width: \"20%\" }}\r\n                onClick={this.componentDidMount()}\r\n              >\r\n                Save\r\n              </button>\r\n              {/* <a href=\"#\" onClick={this.componentDidMount()} >Save</a> */}\r\n            </div>\r\n          </form>\r\n          <div className=\"top\">\r\n            {this.state.values.map((obj) => {\r\n              return (\r\n                <ul  className=\"oderlist\" key={obj.rqId}>\r\n                  <li onClick={() => this.Edit(obj.jqName)}>\r\n                    {/* <BsStarFill className=\"col\" />  */}\r\n                    <BsStarFill className=\"col\" /> <AiFillDelete\r\n                      style={{ marginLeft: \"8px\" }}\r\n                      onClick={() => this.deleteRow(obj.jqId)}\r\n                    />\r\n                    <GrUpdate style={{ marginLeft: \"12px\" }} /> {obj.jqName}\r\n                  </li>\r\n                </ul>\r\n              );\r\n            })}\r\n          </div>\r\n          {/* <div className=\"topbar m-center-btn\">\r\n            <ul className=\"list-inline\">\r\n              <Link to={\"/Aptinew\"}>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"start\"\r\n                  style={{ width: \"auto\" }}\r\n                >\r\n                  Start Now\r\n                </button>\r\n              </Link>\r\n            </ul>\r\n          </div> */}\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default PP;\r\n"]},"metadata":{},"sourceType":"module"}